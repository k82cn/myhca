/* automatically generated by rust-bindgen */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct function_t {
    pub guid: *mut ::std::os::raw::c_char,
    pub lid: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_function_t() {
    assert_eq!(
        ::std::mem::size_of::<function_t>(),
        16usize,
        concat!("Size of: ", stringify!(function_t))
    );
    assert_eq!(
        ::std::mem::align_of::<function_t>(),
        8usize,
        concat!("Alignment of ", stringify!(function_t))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<function_t>())).guid as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(function_t),
            "::",
            stringify!(guid)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<function_t>())).lid as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(function_t),
            "::",
            stringify!(lid)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct hca_t {
    pub description: *mut ::std::os::raw::c_char,
    pub serial_number: *mut ::std::os::raw::c_char,
    pub driver: *mut ::std::os::raw::c_char,
    pub functions: *mut *mut function_t,
}
#[test]
fn bindgen_test_layout_hca_t() {
    assert_eq!(
        ::std::mem::size_of::<hca_t>(),
        32usize,
        concat!("Size of: ", stringify!(hca_t))
    );
    assert_eq!(
        ::std::mem::align_of::<hca_t>(),
        8usize,
        concat!("Alignment of ", stringify!(hca_t))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<hca_t>())).description as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(hca_t),
            "::",
            stringify!(description)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<hca_t>())).serial_number as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(hca_t),
            "::",
            stringify!(serial_number)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<hca_t>())).driver as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(hca_t),
            "::",
            stringify!(driver)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<hca_t>())).functions as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(hca_t),
            "::",
            stringify!(functions)
        )
    );
}
extern "C" {
    pub fn list_hca() -> *mut *mut hca_t;
}
